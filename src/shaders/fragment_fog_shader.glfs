#version 410

in vec2 uv;
in vec3 fragPos;
in vec3 normal;
in vec4	eyePos;

uniform vec3 lightPos;
uniform sampler2D text;

uniform float fogDensity;
uniform vec3 fogColor;

out vec4 outputColor;

void main() {
	vec3 lightColor = vec3(1.0, 1.0, 1.0);

	float	ambientStrength = 0.2f;
	vec3	ambient = ambientStrength * lightColor;

	vec3	norm = normalize(normal);
	vec3	lightDir = normalize(lightPos - fragPos);

	float	diff = max(dot(norm, lightDir), 0.0f);
	vec3	diffuse = diff * lightColor;

	vec3	result = (ambient + diffuse);
	vec2    uvec = vec2(uv.x, uv.y);
	vec4	tex = texture(text, uvec);

	float	fogCoord = abs(eyePos.z / eyePos.w);
	float 	fogFactor = exp(-pow(fogDensity*fogCoord, 2.0));
	fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);

	outputColor = tex * vec4(result, 1.0);
	outputColor = mix(outputColor, vec4(fogColor, 1.0), fogFactor);

}
